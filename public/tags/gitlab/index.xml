<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Gitlab - Tag - Netwezen</title>
        <link>http://example.org/tags/gitlab/</link>
        <description>Gitlab - Tag - Netwezen</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 13 Jan 2018 17:59:45 &#43;0800</lastBuildDate><atom:link href="http://example.org/tags/gitlab/" rel="self" type="application/rss+xml" /><item>
    <title>Cara Deploy Hugo dari Gitlab ke Surge</title>
    <link>http://example.org/post/hugo-gitlab-surge/</link>
    <pubDate>Sat, 13 Jan 2018 17:59:45 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://example.org/post/hugo-gitlab-surge/</guid>
    <description><![CDATA[Saya punya project pembuatan template untuk web company profile. Sewaktu ingin memperlihatkan demo, saya menggunakan layanan hosting Surge. Karen sangat mudah sekali.
Cukup dengan mengetik perintah:
surge ./publicWebsite suda di-deploy ke Surge.
Namun, tiap kali deploy, kita akan upload semua file public ke surge. Ini saya rasa kurang bagus, karena koneksi internet saya sangat terbatas (lambat dan kuota tinggal sedikit hahaha ðŸ˜„).
Karena itu, saya memanfaatkan Gitlab CI:
Worflownya menjadi begini:]]></description>
</item><item>
    <title>Experimen Deploy Hugo dari Gitlab CI ke Github Pages</title>
    <link>http://example.org/post/gitlab-github-pages/</link>
    <pubDate>Mon, 01 Jan 2018 09:39:08 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://example.org/post/gitlab-github-pages/</guid>
    <description><![CDATA[Di awal tahun baru, sepertinya pegawai Travis CI sedang liburan. Hal ini munkin menyebabkan gangguan build di Travis CI. Akibanya lama menunggu Queue build-nya.
Sebagai alternatif, saya menggunakan CI milik Gitlab.
Ini adalah isi file .gitlab-ci.yml di repo blog saya:
image:andthensome/alpine-hugo-git-bash:0.31.2before_script:- hugoversiongithub_pages:script:- rm-rfpublic- gitclone--depth1https://ardianta:$GITHUB_ACCESS_TOKEN@github.com/ardianta/ardianta.github.io.gitpublic- hugo--configconfig.production.toml- cdpublic- gitconfiguser.email&#34;&lt;your git email&gt;&#34;- gitconfig--globaluser.name&#34;&lt;your git name&gt;&#34;- gitadd-A- gitcommit-m&#34;Build from $CI_SERVER_NAME $CI_PIPELINE_ID&#34;- gitpushartifacts:paths:- publiconly:- masterSaya menggunakan image docker andthensome/alpine-hugo-git-bash, karena membutuhkan perintah hugo dan git saat melakukan build.]]></description>
</item><item>
    <title>Deploy Hugo ke Firebase dengan Gitlab CI</title>
    <link>http://example.org/post/hugo-gitlab-firebase/</link>
    <pubDate>Sat, 23 Dec 2017 22:25:46 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://example.org/post/hugo-gitlab-firebase/</guid>
    <description><![CDATA[Biasanya saya melakukan deploy dengan perintah firebase deploy. Akan tetapi perintah ini sama persis seperti FTP.
Semua file akan di-upload ke Firebase. Hal ini akan membuat kuota internet saya cepat habis ðŸ˜„, resiko pakai paket data.
Lalu sebaiknya bagaimana?
Saya ingin mencoba workflow pak Ariya. Beliau deploy Hugo ke Firebase melalui Gitlab CI.
Gambarannya seperti ini:
Sumber: ariya.io
Lalu, pada repo Gitlab, saya menggunakan konfigurasi CI seperti ini:
image:nohitme/hugo-firebase:0.31.1before_script:- hugoversion- firebase--versionhugo_firebase:stage:deployonly:- masterexcept:- devscript:- rm-rfpublic- hugo--configconfig.]]></description>
</item></channel>
</rss>
